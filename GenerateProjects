@echo off
setlocal

:: Parameters
set solutionName=MySolution
set mainProjectName=MyMainProject
set testProjectName=MyMainProject.Tests
set framework=net6.0

:: Create solution
dotnet new sln -n %solutionName%

:: Create main project
dotnet new console -n %mainProjectName%
cd %mainProjectName%

:: Modify the main project .csproj file to target the specified framework
(for /f "delims=" %%i in (%mainProjectName%.csproj) do (
    echo %%i | findstr /v "<TargetFramework>" >nul
    if errorlevel 1 (
        echo     <TargetFramework>%framework%</TargetFramework>
    ) else (
        echo %%i
    )
)) > temp.csproj
move /Y temp.csproj %mainProjectName%.csproj

:: Return to solution directory
cd ..

:: Add main project to solution
dotnet sln %solutionName%.sln add %mainProjectName%\%mainProjectName%.csproj

:: Create test project
dotnet new nunit -n %testProjectName%
cd %testProjectName%

:: Modify the test project .csproj file to target the specified framework and add project reference
(for /f "delims=" %%i in (%testProjectName%.csproj) do (
    echo %%i | findstr /v "<TargetFramework>" >nul
    if errorlevel 1 (
        echo     <TargetFramework>%framework%</TargetFramework>
    ) else (
        echo %%i
    )
)) > temp.csproj
(
    echo   <ItemGroup>
    echo     <ProjectReference Include="..\%mainProjectName%\%mainProjectName%.csproj" />
    echo   </ItemGroup>
) >> temp.csproj
move /Y temp.csproj %testProjectName%.csproj

:: Add necessary test packages
dotnet add package NUnit
dotnet add package NUnit3TestAdapter
dotnet add package Microsoft.NET.Test.Sdk

:: Return to solution directory
cd ..

:: Add test project to solution
dotnet sln %solutionName%.sln add %testProjectName%\%testProjectName%.csproj

:: Restore packages
dotnet restore

echo Solution and projects created successfully!

endlocal
pause


Explanation
Parameters: The script sets the solution name, main project name, test project name, and the target framework as parameters.
Create Solution: Creates a new solution using dotnet new sln.
Create Main Project: Creates a new console project and modifies the .csproj file to target the specified framework.
Add Main Project to Solution: Adds the main project to the solution.
Create Test Project: Creates a new NUnit test project and modifies the .csproj file to target the specified framework, also adding a reference to the main project.
Add Necessary Packages: Adds the necessary NuGet packages for NUnit testing.
Add Test Project to Solution: Adds the test project to the solution.
Restore Packages: Restores the packages for the solution.
How to Use
Save the script as CreateProjects.bat.
Open a Command Prompt.
Navigate to the directory where you want to create your solution.
Run the script: CreateProjects.bat.
This script will create a new solution with the specified projects, configure them correctly, and add the necessary dependencies for testing with NUnit.
